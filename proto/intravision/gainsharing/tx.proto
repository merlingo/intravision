syntax = "proto3";

package intravision.gainsharing;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "intravision/gainsharing/params.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/merlingo/intravision/x/gainsharing/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams         (MsgUpdateParams        ) returns (MsgUpdateParamsResponse        );
  rpc SetMechanism         (MsgSetMechanism        ) returns (MsgSetMechanismResponse        );
  rpc CalculatePerformance (MsgCalculatePerformance) returns (MsgCalculatePerformanceResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                                 "authority";
  option           (amino.name) = "intravision/x/gainsharing/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgSetMechanism {
  option (cosmos.msg.v1.signer) = "creator";
  string creator       = 1;
  string metrics       = 2;
  string coefficients  = 3;
  string convergeLimit = 4;
  string slope         = 5;
}

message MsgSetMechanismResponse {
  int32 id = 1;
}

message MsgCalculatePerformance {
  option (cosmos.msg.v1.signer) = "creator";
  string                   creator = 1;
  int32                    mid     = 2;
  cosmos.base.v1beta1.Coin wager   = 3 [(gogoproto.nullable) = false];
  string                   earner  = 4;
  string                   taskid  = 5;
}

message MsgCalculatePerformanceResponse {
  int32                    id     = 1;
  cosmos.base.v1beta1.Coin reward = 2 [(gogoproto.nullable) = false];
}

