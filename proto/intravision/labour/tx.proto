syntax = "proto3";

package intravision.labour;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "intravision/labour/params.proto";
import "cosmos/base/v1beta1/coin.proto"; 

option go_package = "github.com/merlingo/intravision/x/labour/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams (MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc Work         (MsgWork        ) returns (MsgWorkResponse        );
  rpc BeginTask    (MsgBeginTask   ) returns (MsgBeginTaskResponse   );
  rpc FinishTask   (MsgFinishTask  ) returns (MsgFinishTaskResponse  );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                            "authority";
  option           (amino.name) = "intravision/x/labour/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgWork {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  string worker      = 2;
  string taskid      = 3;
  uint64 beginWork   = 4;
  uint64 finishWork  = 5;
  int32  workingTime = 6;
}

message MsgWorkResponse {
  uint64 id=1;
}

message MsgBeginTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string taskid    = 2;
  string assigner  = 3;
  uint64 beginTask = 4;
  uint64 deadline  = 5;
  string wager = 6 ; 
}

message MsgBeginTaskResponse {
  uint64 id =1;
}

message MsgFinishTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator    = 1;
  uint64 taskid     = 2;
  uint64 finishTask = 3;
}

message MsgFinishTaskResponse {}

